{"uid":"24df60ecc627f78","name":"Add post to random user","fullName":"365Test:_365Test.tests.AddPost.AddUserPost()","historyId":"07e8361d0d0649701de56836ea94610d","time":{"start":1726655962875,"stop":1726655963448,"duration":573},"status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":4,"retriesStatusChange":true,"beforeStages":[],"testStage":{"status":"passed","steps":[{"name":"Get random user's ID","time":{"start":1726655962882,"stop":1726655963043,"duration":161},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false,"stepsCount":0,"hasContent":false},{"name":"Create post using random user's ID","time":{"start":1726655963045,"stop":1726655963445,"duration":400},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"userId","value":"1"}],"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false,"stepsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false,"stepsCount":2,"hasContent":true},"afterStages":[],"labels":[{"name":"thread","value":"NonParallelWorker"},{"name":"host","value":"Anastasiyas-MacBook-Pro"},{"name":"language","value":"C#"},{"name":"framework","value":"NUnit 3"},{"name":"package","value":"_365Test.tests"},{"name":"testMethod","value":"AddUserPost"},{"name":"testClass","value":"AddPost"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"e227cc782228505f","status":"passed","time":{"start":1726655906695,"stop":1726655907318,"duration":623}},{"uid":"3e769bf6950a67de","status":"failed","statusDetails":"  Assert.That(response.StatusCode, Is.EqualTo(HttpStatusCode.OK))\n  Expected: OK\n  But was:  Created\n","time":{"start":1726655895258,"stop":1726655895425,"duration":167}},{"uid":"88d6397800cff0ae","status":"failed","statusDetails":"  Assert.That(response.StatusCode, Is.EqualTo(HttpStatusCode.OK))\n  Expected: OK\n  But was:  Created\n","time":{"start":1726655895095,"stop":1726655895257,"duration":162}},{"uid":"c820874d76bbfe25","status":"failed","statusDetails":"  Assert.That(response.StatusCode, Is.EqualTo(HttpStatusCode.OK))\n  Expected: OK\n  But was:  Created\n","time":{"start":1726655894435,"stop":1726655895075,"duration":640}}],"categories":[],"tags":[]},"source":"24df60ecc627f78.json","parameterValues":[]}